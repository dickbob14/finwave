name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies for WeasyPrint
      run: |
        sudo apt-get update
        sudo apt-get install -y libcairo2 libpango-1.0-0 libgdk-pixbuf2.0-0 libffi-dev
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
        pip install weasyprint==61.0
    
    - name: Run tests
      run: |
        cd backend
        pytest tests/ -v --cov=app --cov-report=term-missing || true
    
    - name: Test template generation
      run: |
        cd backend/templates
        python test_templates.py
    
    - name: Generate template artifact
      run: |
        cd backend
        make templates
    
    - name: Upload template
      uses: actions/upload-artifact@v3
      with:
        name: board-pack-template
        path: backend/assets/templates/finwave_board_pack.xlsx
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8
      run: |
        cd backend
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
    
    - name: Check formatting with black
      run: |
        cd backend
        black --check . || true
    
    - name: Check import sorting
      run: |
        cd backend
        isort --check-only . || true

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security checks
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        check-modified-files-only: 'yes'
    
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD